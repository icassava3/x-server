name: Build and Package x-server

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.14.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Update package.json version
        run: |
          NEW_VERSION="${GITHUB_REF#refs/tags/v}"
          npm version $NEW_VERSION --no-git-tag-version
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Install dependencies
        run: npm install

      - name: Install localtunnel dependencies
        working-directory: ./src/spd-localtunnel
        run: npm install

      - name: Install external modules dependencies
        working-directory: ./external_modules
        run: npm install

      - name: Package application
        run: npm run make

      - name: Create SSH Key file
        run: |
          echo "${{ secrets.SSH_KEY }}" > path_to_private_key
          chmod 600 path_to_private_key
        shell: bash

      - name: Copier les fichiers générés vers le serveur
        run: |
          ssh -o StrictHostKeyChecking=no -i path_to_private_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            if [ -f /mnt/hosting/sites/github/githubCopy/RELEASES ]; then
              mv /mnt/hosting/sites/github/githubCopy/RELEASES /mnt/hosting/sites/github/githubCopy/RELEASES.bak
            fi
          "
          scp -v -o StrictHostKeyChecking=no -i path_to_private_key \
            "out/make/squirrel.windows/x64/x-server-${{ env.NEW_VERSION }}-full.nupkg" \
            "out/make/squirrel.windows/x64/RELEASES" \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/mnt/hosting/sites/github/githubCopy/
        shell: bash

      
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release create "v${{ env.NEW_VERSION }}" \
            --title "Release v${{ env.NEW_VERSION }}" \
            --notes "### Changements :\n- Nouveaux changements dans la version." \
            --target "${{ github.ref }}"

      - name: Upload assets to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release upload "v${{ env.NEW_VERSION }}" \
            "out/make/squirrel.windows/x64/x-server-${{ env.NEW_VERSION }} Setup.exe" \
            "out/make/x-server-v${{ env.NEW_VERSION }}.zip"
