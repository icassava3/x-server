name: Build and Package x-server

on:
  push:
    tags:
      - 'v*.*.*'  

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.14.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Update package.json version
        run: |
          NEW_VERSION="${GITHUB_REF#refs/tags/v}"
          npm version $NEW_VERSION --no-git-tag-version
        shell: bash

      - name: Install dependencies
        run: npm install

      - name: Install localtunnel dependencies
        working-directory: ./src/spd-localtunnel
        run: npm install 

      - name: Install external modules dependencies
        working-directory: ./external_modules
        run: npm install 

      - name: Package application
        run: npm run make
      
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}   
          release_name: "Release ${{ github.ref_name }}"  
          draft: false
          prerelease: false
          body: |
            ### Changements :
            - Nouveaux changements dans la version.

      - name: Create SSH Key file
        run: |
          echo "${{ secrets.SSH_KEY }}" > path_to_private_key
          chmod 600 path_to_private_key
        shell: bash
      
      - name: Copier les fichiers générés vers le serveur
        run: |
          VERSION=$(node -p "require('./package.json').version")
          scp -v -o StrictHostKeyChecking=no -i path_to_private_key \
            "out/make/squirrel.windows/x64/x-server-${VERSION}-full.nupkg" \
            "out/make/squirrel.windows/x64/RELEASES" \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/mnt/hosting/sites/github/githubCopy/
        shell: bash

      - name: Upload Release Asset x-server Setup.exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/make/squirrel.windows/x64/x-server-${{ github.ref_name }} Setup.exe
          asset_name: x-server-${{ github.ref_name }} Setup.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset - RELEASES
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/make/squirrel.windows/x64/RELEASES
          asset_name: RELEASES
          asset_content_type: text/plain
